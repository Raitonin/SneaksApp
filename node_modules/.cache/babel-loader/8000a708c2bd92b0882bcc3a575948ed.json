{"ast":null,"code":"const request = require('request-promise');\n\nmodule.exports = async options => {\n  const {\n    cookieJar,\n    proxy,\n    userAgent\n  } = options;\n  const reqOptions = {\n    uri: 'https://stockx.com/login',\n    headers: {\n      'Host': 'stockx.com',\n      'upgrade-insecure-requests': '1',\n      'user-agent': userAgent,\n      'sec-fetch-mode': 'navigate',\n      'sec-fetch-user': '?1',\n      'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',\n      'sec-fetch-site': 'none',\n      'accept-language': 'en-US,en;q=0.9'\n    },\n    jar: cookieJar,\n    followAllRedirects: true,\n    followRedirect: true,\n    proxy,\n    resolveWithFullResponse: true\n  }; //Fetch login page\n\n  const res = await request(reqOptions);\n  if (res.statusCode != 200) throw new Error(`Status code error ${res.statusCode} - Response: ${res.body}`); //Get state and client ID\n\n  const state = res.req._header.split('state=')[1].split('&')[0];\n\n  const clientID = res.req._header.split('client=')[1].split('&')[0];\n\n  if (state == undefined || clientID == undefined) throw new Error(\"Could not find state or Client ID!\");\n  return {\n    state,\n    clientID\n  };\n};","map":{"version":3,"sources":["/Users/dhruv/Sneaks/sneaks-website/node_modules/stockx-api/src/api/login/fetchstate.js"],"names":["request","require","module","exports","options","cookieJar","proxy","userAgent","reqOptions","uri","headers","jar","followAllRedirects","followRedirect","resolveWithFullResponse","res","statusCode","Error","body","state","req","_header","split","clientID","undefined"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAOC,OAAP,IAAmB;AAChC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAkCH,OAAxC;AACA,QAAMI,UAAU,GAAG;AACfC,IAAAA,GAAG,EAAE,0BADU;AAEfC,IAAAA,OAAO,EAAE;AACL,cAAQ,YADH;AAEL,mCAA6B,GAFxB;AAGL,oBAAcH,SAHT;AAIL,wBAAkB,UAJb;AAKL,wBAAkB,IALb;AAML,gBAAU,wHANL;AAOL,wBAAkB,MAPb;AAQL,yBAAmB;AARd,KAFM;AAYfI,IAAAA,GAAG,EAAEN,SAZU;AAafO,IAAAA,kBAAkB,EAAE,IAbL;AAcfC,IAAAA,cAAc,EAAE,IAdD;AAefP,IAAAA,KAfe;AAgBfQ,IAAAA,uBAAuB,EAAE;AAhBV,GAAnB,CAFgC,CAqBhC;;AACA,QAAMC,GAAG,GAAG,MAAMf,OAAO,CAACQ,UAAD,CAAzB;AAEA,MAAIO,GAAG,CAACC,UAAJ,IAAkB,GAAtB,EAA2B,MAAM,IAAIC,KAAJ,CAAW,qBAAoBF,GAAG,CAACC,UAAW,gBAAeD,GAAG,CAACG,IAAK,EAAtE,CAAN,CAxBK,CA0BhC;;AACA,QAAMC,KAAK,GAAGJ,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBC,KAAhB,CAAsB,QAAtB,EAAgC,CAAhC,EAAmCA,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAAd;;AACA,QAAMC,QAAQ,GAAGR,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBC,KAAhB,CAAsB,SAAtB,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAjB;;AAEA,MAAIH,KAAK,IAAIK,SAAT,IAAsBD,QAAQ,IAAIC,SAAtC,EAAiD,MAAM,IAAIP,KAAJ,CAAU,oCAAV,CAAN;AAEjD,SAAO;AACHE,IAAAA,KADG;AAEHI,IAAAA;AAFG,GAAP;AAIH,CApCD","sourcesContent":["const request = require('request-promise');\n\nmodule.exports = async (options) => {\n    const { cookieJar, proxy, userAgent } = options;\n    const reqOptions = {\n        uri: 'https://stockx.com/login',\n        headers: {\n            'Host': 'stockx.com',\n            'upgrade-insecure-requests': '1',\n            'user-agent': userAgent,\n            'sec-fetch-mode': 'navigate',\n            'sec-fetch-user': '?1',\n            'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',\n            'sec-fetch-site': 'none',\n            'accept-language': 'en-US,en;q=0.9'\n        },\n        jar: cookieJar,\n        followAllRedirects: true,\n        followRedirect: true,\n        proxy,\n        resolveWithFullResponse: true\n    };\n\n    //Fetch login page\n    const res = await request(reqOptions);\n\n    if (res.statusCode != 200) throw new Error(`Status code error ${res.statusCode} - Response: ${res.body}`);\n\n    //Get state and client ID\n    const state = res.req._header.split('state=')[1].split('&')[0];\n    const clientID = res.req._header.split('client=')[1].split('&')[0];\n\n    if (state == undefined || clientID == undefined) throw new Error(\"Could not find state or Client ID!\");\n\n    return {\n        state, \n        clientID\n    };\n};"]},"metadata":{},"sourceType":"script"}
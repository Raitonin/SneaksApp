{"ast":null,"code":"const request = require('request-promise');\n\nmodule.exports = async (bearer, options) => {\n  const {\n    askID,\n    cookieJar,\n    proxy,\n    userAgent\n  } = options;\n  const res = await request({\n    uri: `https://stockx.com/api/portfolio/${askID}`,\n    headers: {\n      'Host': 'stockx.com',\n      'sec-fetch-mode': 'cors',\n      'origin': 'https://stockx.com',\n      'authorization': `Bearer ${bearer}`,\n      'content-type': 'application/json',\n      'appos': 'web',\n      'x-requested-with': 'XMLHttpRequest',\n      'user-agent': userAgent,\n      'appversion': '0.1',\n      'accept': '*/*',\n      'sec-fetch-site': 'same-origin',\n      'accept-language': 'en-US,en;q=0.9'\n    },\n    method: 'DELETE',\n    jar: cookieJar,\n    proxy,\n    json: {\n      \"chain_id\": askID.toString(),\n      \"notes\": \"Customer Removed Ask\"\n    },\n    simple: false,\n    resolveWithFullResponse: true\n  });\n\n  if (res.statusCode !== 200) {\n    const e = new Error(`Status code error: ${res.statusCode}`);\n    e.statusCode = res.statusCode;\n    e.body = res.body;\n    throw e;\n  }\n\n  ;\n  return {\n    id: res.body.PortfolioItem.chainId,\n    response: res.body\n  };\n};","map":{"version":3,"sources":["/Users/dhruv/Sneaks/sneaks-website/node_modules/stockx-api/src/api/deleteask/deleteask.js"],"names":["request","require","module","exports","bearer","options","askID","cookieJar","proxy","userAgent","res","uri","headers","method","jar","json","toString","simple","resolveWithFullResponse","statusCode","e","Error","body","id","PortfolioItem","chainId","response"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AACxC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAyCJ,OAA/C;AAEA,QAAMK,GAAG,GAAG,MAAMV,OAAO,CAAC;AACtBW,IAAAA,GAAG,EAAG,oCAAmCL,KAAM,EADzB;AAEtBM,IAAAA,OAAO,EAAE;AACL,cAAQ,YADH;AAEL,wBAAkB,MAFb;AAGL,gBAAU,oBAHL;AAIL,uBAAkB,UAASR,MAAO,EAJ7B;AAKL,sBAAgB,kBALX;AAML,eAAS,KANJ;AAOL,0BAAoB,gBAPf;AAQL,oBAAcK,SART;AASL,oBAAc,KATT;AAUL,gBAAU,KAVL;AAWL,wBAAkB,aAXb;AAYL,yBAAmB;AAZd,KAFa;AAgBtBI,IAAAA,MAAM,EAAE,QAhBc;AAiBtBC,IAAAA,GAAG,EAAEP,SAjBiB;AAkBtBC,IAAAA,KAlBsB;AAmBtBO,IAAAA,IAAI,EAAE;AACF,kBAAYT,KAAK,CAACU,QAAN,EADV;AAEF,eAAS;AAFP,KAnBgB;AAuBtBC,IAAAA,MAAM,EAAE,KAvBc;AAwBtBC,IAAAA,uBAAuB,EAAE;AAxBH,GAAD,CAAzB;;AA2BA,MAAIR,GAAG,CAACS,UAAJ,KAAmB,GAAvB,EAA2B;AACvB,UAAMC,CAAC,GAAG,IAAIC,KAAJ,CAAW,sBAAqBX,GAAG,CAACS,UAAW,EAA/C,CAAV;AACAC,IAAAA,CAAC,CAACD,UAAF,GAAeT,GAAG,CAACS,UAAnB;AACAC,IAAAA,CAAC,CAACE,IAAF,GAASZ,GAAG,CAACY,IAAb;AAEA,UAAMF,CAAN;AACH;;AAAA;AAED,SAAO;AACHG,IAAAA,EAAE,EAAEb,GAAG,CAACY,IAAJ,CAASE,aAAT,CAAuBC,OADxB;AAEHC,IAAAA,QAAQ,EAAEhB,GAAG,CAACY;AAFX,GAAP;AAIH,CA1CD","sourcesContent":["const request = require('request-promise');\n\nmodule.exports = async (bearer, options) => {\n    const { askID, cookieJar, proxy, userAgent } = options;\n    \n    const res = await request({\n        uri: `https://stockx.com/api/portfolio/${askID}`,\n        headers: {\n            'Host': 'stockx.com',\n            'sec-fetch-mode': 'cors',\n            'origin': 'https://stockx.com',\n            'authorization': `Bearer ${bearer}`,\n            'content-type': 'application/json',\n            'appos': 'web',\n            'x-requested-with': 'XMLHttpRequest',\n            'user-agent': userAgent,\n            'appversion': '0.1',\n            'accept': '*/*',\n            'sec-fetch-site': 'same-origin',\n            'accept-language': 'en-US,en;q=0.9',\n        },\n        method: 'DELETE',\n        jar: cookieJar, \n        proxy,\n        json: {\n            \"chain_id\": askID.toString(),\n            \"notes\": \"Customer Removed Ask\"\n        },\n        simple: false,\n        resolveWithFullResponse: true\n    });\n\n    if (res.statusCode !== 200){\n        const e = new Error(`Status code error: ${res.statusCode}`);\n        e.statusCode = res.statusCode;\n        e.body = res.body;\n\n        throw e;\n    };\n\n    return {\n        id: res.body.PortfolioItem.chainId,\n        response: res.body\n    };\n};"]},"metadata":{},"sourceType":"script"}
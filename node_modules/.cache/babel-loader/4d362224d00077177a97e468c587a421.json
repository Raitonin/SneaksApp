{"ast":null,"code":"const got = require('got');\n\nconst Sneaker = require('../models/Sneaker');\n\nmodule.exports = {\n  getProductsAndInfo: async function (key, callback) {\n    try {\n      const response = await got.post('https://xw7sbct9v6-1.algolianet.com/1/indexes/products/query?x-algolia-agent=Algolia%20for%20vanilla%20JavaScript%203.32.1&x-algolia-application-id=XW7SBCT9V6&x-algolia-api-key=6bfb5abee4dcd8cea8f0ca1ca085c2b3', {\n        headers: {\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36',\n          \"accept\": \"application/json\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"content-type\": \"application/x-www-form-urlencoded\",\n          \"sec-fetch-dest\": \"empty\",\n          \"sec-fetch-mode\": \"cors\",\n          \"sec-fetch-site\": \"cross-site\"\n        },\n        body: '{\"params\":\"query=' + key + '&facets=*&filters=\"}',\n        http2: true\n      });\n      var json = JSON.parse(response.body);\n      var products = [];\n      var numOfShoes = json.hits.length;\n\n      for (var i = 0; i < json.hits.length; i++) {\n        if (!json.hits[i].style_id || json.hits[i].style_id.indexOf(' ') >= 0) {\n          numOfShoes--;\n          continue;\n        }\n\n        var shoe = new Sneaker({\n          shoeName: json.hits[i].name,\n          brand: json.hits[i].brand,\n          silhoutte: json.hits[i].make,\n          styleID: json.hits[i].style_id,\n          make: json.hits[i].make,\n          colorway: json.hits[i].colorway,\n          retailPrice: json.hits[i].searchable_traits['Retail Price'],\n          thumbnail: json.hits[i].media.imageUrl,\n          releaseDate: json.hits[i].release_date,\n          description: json.hits[i].description,\n          urlKey: json.hits[i].url,\n          resellLinks: {\n            stockX: 'https://stockx.com/' + json.hits[i].url\n          }\n        });\n\n        if (json.hits[i].lowest_ask) {\n          shoe.lowestResellPrice.stockX = json.hits[i].lowest_ask;\n        }\n\n        products.push(shoe);\n      }\n\n      if (products.length == 0 || numOfShoes == 0) {\n        callback(new Error('Product Not Found'), null);\n      } else {\n        callback(null, products);\n      }\n    } catch (error) {\n      let err = new Error(\"Could not connect to StockX while searching '\", shoe.styleID, \"' Error: \", error);\n      console.log(err);\n      callback(err, products);\n    }\n  },\n  getPrices: async function (shoe, callback) {\n    let priceMap = {};\n\n    try {\n      const response = await got('https://stockx.com/api/products/' + shoe.urlKey + '?includes=market', {\n        headers: {\n          'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.4 Safari/605.1.15'\n        },\n        http2: true\n      });\n      let json = JSON.parse(response.body);\n      Object.keys(json.Product.children).forEach(function (key) {\n        if (json.Product.children[key].market.lowestAsk == 0) return; //if size is in womens, then remove \"W\"\n\n        var size = json.Product.children[key].shoeSize;\n\n        if (size[size.length - 1] == 'W') {\n          size = size.substring(0, size.length - 1);\n        }\n\n        priceMap[size] = json.Product.children[key].market.lowestAsk;\n      });\n      shoe.resellPrices.stockX = priceMap;\n      callback();\n    } catch (error) {\n      let err = new Error(\"Could not connect to StockX while searching '\", shoe.styleID, \"' Error: \", error);\n      console.log(err);\n      callback(err);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/dhruv/Sneaks/sneaks-website/node_modules/sneaks-api/scrapers/stockx-scraper.js"],"names":["got","require","Sneaker","module","exports","getProductsAndInfo","key","callback","response","post","headers","body","http2","json","JSON","parse","products","numOfShoes","hits","length","i","style_id","indexOf","shoe","shoeName","name","brand","silhoutte","make","styleID","colorway","retailPrice","searchable_traits","thumbnail","media","imageUrl","releaseDate","release_date","description","urlKey","url","resellLinks","stockX","lowest_ask","lowestResellPrice","push","Error","error","err","console","log","getPrices","priceMap","Object","keys","Product","children","forEach","market","lowestAsk","size","shoeSize","substring","resellPrices"],"mappings":"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","sourcesContent":["const got = require('got');\nconst Sneaker = require('../models/Sneaker');\n\n\nmodule.exports = {\n    getProductsAndInfo: async function (key, callback) {\n      \n        try {\n            const response = await got.post('https://xw7sbct9v6-1.algolianet.com/1/indexes/products/query?x-algolia-agent=Algolia%20for%20vanilla%20JavaScript%203.32.1&x-algolia-application-id=XW7SBCT9V6&x-algolia-api-key=6bfb5abee4dcd8cea8f0ca1ca085c2b3', {\n                headers: {\n                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36',\n                    \"accept\": \"application/json\",\n                    \"accept-language\": \"en-US,en;q=0.9\",\n                    \"content-type\": \"application/x-www-form-urlencoded\",\n                    \"sec-fetch-dest\": \"empty\",\n                    \"sec-fetch-mode\": \"cors\",\n                    \"sec-fetch-site\": \"cross-site\"\n                },\n                body: '{\"params\":\"query=' + key + '&facets=*&filters=\"}',\n                http2: true\n            });\n           \n            \n            var json = JSON.parse(response.body);\n            var products = [];\n            var numOfShoes = json.hits.length;\n\n            for (var i = 0; i < json.hits.length; i++) {\n                if (!json.hits[i].style_id || (json.hits[i].style_id).indexOf(' ') >= 0) {\n                    numOfShoes--;\n                    continue;\n                }\n                var shoe = new Sneaker({\n                    shoeName: json.hits[i].name,\n                    brand: json.hits[i].brand,\n                    silhoutte: json.hits[i].make,\n                    styleID: json.hits[i].style_id,\n                    make: json.hits[i].make,\n                    colorway: json.hits[i].colorway,\n                    retailPrice: json.hits[i].searchable_traits['Retail Price'],\n                    thumbnail: json.hits[i].media.imageUrl,\n                    releaseDate: json.hits[i].release_date,\n                    description: json.hits[i].description,\n                    urlKey: json.hits[i].url,\n                    resellLinks: {\n                        stockX: 'https://stockx.com/' + json.hits[i].url\n                    }\n                });\n                if(json.hits[i].lowest_ask){\n                    shoe.lowestResellPrice.stockX = json.hits[i].lowest_ask;\n                }\n                products.push(shoe)\n            }\n          \n            if (products.length == 0 || numOfShoes == 0) {\n                callback(new Error('Product Not Found'), null);\n            } \n            else {\n                callback(null, products);\n            }\n        } catch (error) {\n            let err = new Error(\"Could not connect to StockX while searching '\", shoe.styleID, \"' Error: \", error)\n            console.log(err);\n            callback(err, products)\n        }\n    },\n\n    getPrices: async function (shoe, callback) {\n        let priceMap = {}\n        try {\n            const response = await got('https://stockx.com/api/products/' + shoe.urlKey + '?includes=market', {\n                headers: {\n                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.4 Safari/605.1.15'\n                },\n                http2: true\n            });\n            let json = JSON.parse(response.body);\n            Object.keys(json.Product.children).forEach(function (key) {\n                if (json.Product.children[key].market.lowestAsk == 0) return;\n                //if size is in womens, then remove \"W\"\n                var size = json.Product.children[key].shoeSize\n                if(size[size.length-1] == 'W'){\n                    size = size.substring(0, size.length - 1);\n                    \n                }\n                priceMap[size] = json.Product.children[key].market.lowestAsk;\n                \n            });\n            shoe.resellPrices.stockX = priceMap;\n            callback();\n        } catch (error) {\n            let err = new Error(\"Could not connect to StockX while searching '\", shoe.styleID, \"' Error: \", error)\n            console.log(err);\n            callback(err)\n\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"script"}
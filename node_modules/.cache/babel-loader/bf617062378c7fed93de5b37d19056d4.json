{"ast":null,"code":"const got = require('got');\n\nmodule.exports = async (product, options) => {\n  const {\n    currency,\n    proxy,\n    userAgent\n  } = options;\n  const variantArray = [];\n  let webURL;\n\n  if (typeof product == 'string') {\n    if (product.includes('stockx.com/')) webURL = product.split('stockx.com/')[1].split('/')[0];else webURL = product;\n  } else webURL = product.urlKey;\n\n  const res = await got(`https://stockx.com/api/products/${webURL}?includes=market&currency=${currency}`, {\n    headers: {\n      'user-agent': userAgent,\n      'sec-fetch-dest': 'none',\n      'accept': '*/*',\n      'sec-fetch-site': 'cross-site',\n      'sec-fetch-mode': 'cors',\n      'accept-language': 'en-US'\n    },\n    responseType: 'json',\n    http2: true\n  });\n  const {\n    body\n  } = res;\n  const variants = body.Product.children;\n\n  for (let key in variants) {\n    variantArray.push({\n      size: variants[key].shoeSize,\n      uuid: key,\n      market: variants[key].market\n    });\n  }\n\n  ;\n  return {\n    name: body[\"Product\"].title,\n    image: body[\"Product\"].media.imageUrl,\n    urlKey: body[\"Product\"].urlKey,\n    pid: body[\"Product\"].styleId,\n    uuid: body[\"Product\"].uuid,\n    variants: variantArray\n  };\n};","map":{"version":3,"sources":["/Users/dhruv/Sneaks/sneaks-website/node_modules/stockx-api/src/api/scrapers/fetchproductdetails.js"],"names":["got","require","module","exports","product","options","currency","proxy","userAgent","variantArray","webURL","includes","split","urlKey","res","headers","responseType","http2","body","variants","Product","children","key","push","size","shoeSize","uuid","market","name","title","image","media","imageUrl","pid","styleId"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,OAAOC,OAAP,EAAgBC,OAAhB,KAA4B;AACzC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAiCH,OAAvC;AACA,QAAMI,YAAY,GAAG,EAArB;AACA,MAAIC,MAAJ;;AAEA,MAAI,OAAON,OAAP,IAAkB,QAAtB,EAA+B;AAC3B,QAAIA,OAAO,CAACO,QAAR,CAAiB,aAAjB,CAAJ,EAAqCD,MAAM,GAAGN,OAAO,CAACQ,KAAR,CAAc,aAAd,EAA6B,CAA7B,EAAgCA,KAAhC,CAAsC,GAAtC,EAA2C,CAA3C,CAAT,CAArC,KACKF,MAAM,GAAGN,OAAT;AACR,GAHD,MAIKM,MAAM,GAAGN,OAAO,CAACS,MAAjB;;AAEL,QAAMC,GAAG,GAAG,MAAMd,GAAG,CAAE,mCAAkCU,MAAO,6BAA4BJ,QAAS,EAAhF,EAAmF;AACpGS,IAAAA,OAAO,EAAE;AACL,oBAAcP,SADT;AAEL,wBAAkB,MAFb;AAGL,gBAAU,KAHL;AAIL,wBAAkB,YAJb;AAKL,wBAAkB,MALb;AAML,yBAAmB;AANd,KAD2F;AASpGQ,IAAAA,YAAY,EAAE,MATsF;AAUpGC,IAAAA,KAAK,EAAE;AAV6F,GAAnF,CAArB;AAaA,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,GAAjB;AACA,QAAMK,QAAQ,GAAGD,IAAI,CAACE,OAAL,CAAaC,QAA9B;;AAEA,OAAK,IAAIC,GAAT,IAAgBH,QAAhB,EAAyB;AACrBV,IAAAA,YAAY,CAACc,IAAb,CAAkB;AACdC,MAAAA,IAAI,EAAEL,QAAQ,CAACG,GAAD,CAAR,CAAcG,QADN;AAEdC,MAAAA,IAAI,EAAEJ,GAFQ;AAGdK,MAAAA,MAAM,EAAER,QAAQ,CAACG,GAAD,CAAR,CAAcK;AAHR,KAAlB;AAKH;;AAAA;AAED,SAAO;AACHC,IAAAA,IAAI,EAAEV,IAAI,CAAC,SAAD,CAAJ,CAAgBW,KADnB;AAEHC,IAAAA,KAAK,EAAEZ,IAAI,CAAC,SAAD,CAAJ,CAAgBa,KAAhB,CAAsBC,QAF1B;AAGHnB,IAAAA,MAAM,EAAEK,IAAI,CAAC,SAAD,CAAJ,CAAgBL,MAHrB;AAIHoB,IAAAA,GAAG,EAAEf,IAAI,CAAC,SAAD,CAAJ,CAAgBgB,OAJlB;AAKHR,IAAAA,IAAI,EAAER,IAAI,CAAC,SAAD,CAAJ,CAAgBQ,IALnB;AAMHP,IAAAA,QAAQ,EAAEV;AANP,GAAP;AAQH,CA3CD","sourcesContent":["const got = require('got');\n\nmodule.exports = async (product, options) => {\n    const { currency, proxy, userAgent } = options;\n    const variantArray = [];\n    let webURL;\n    \n    if (typeof product == 'string'){\n        if (product.includes('stockx.com/')) webURL = product.split('stockx.com/')[1].split('/')[0];\n        else webURL = product;\n    }\n    else webURL = product.urlKey;\n\n    const res = await got(`https://stockx.com/api/products/${webURL}?includes=market&currency=${currency}`, {\n        headers: {\n            'user-agent': userAgent,\n            'sec-fetch-dest': 'none',\n            'accept': '*/*',\n            'sec-fetch-site': 'cross-site',\n            'sec-fetch-mode': 'cors',\n            'accept-language': 'en-US'\n        },\n        responseType: 'json',\n        http2: true\n    });\n\n    const { body } = res;\n    const variants = body.Product.children;\n\n    for (let key in variants){\n        variantArray.push({\n            size: variants[key].shoeSize,\n            uuid: key,\n            market: variants[key].market\n        });\n    };\n\n    return {\n        name: body[\"Product\"].title,\n        image: body[\"Product\"].media.imageUrl,\n        urlKey: body[\"Product\"].urlKey,\n        pid: body[\"Product\"].styleId,\n        uuid: body[\"Product\"].uuid,\n        variants: variantArray\n    };\n};"]},"metadata":{},"sourceType":"script"}